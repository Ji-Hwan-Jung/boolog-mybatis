drop table if exists member cascade;
drop table if exists posts cascade;
drop table if exists liked_posts cascade;
drop table if exists tag cascade;

create table member
(
    id bigint generated by default as identity,
    email varchar(255) not null unique,
    password varchar(255) not null,
    name varchar(255) not null unique,
    picture varchar(255),
    introduction varchar(100),
    provider varchar(255),
    provider_id varchar(255),
    role varchar(255) not null,
    reg_date timestamp default CURRENT_TIMESTAMP,
    primary key (id)
);

create table posts
(
    id bigint generated by default as identity,
    member_id bigint not null,
    thumbnail varchar(255),
    description varchar(255),
    title varchar(255) not null,
    content clob not null,
    liked int not null default 0,
    tags varchar(255),
    created_date timestamp default CURRENT_TIMESTAMP,
    modified_date timestamp default CURRENT_TIMESTAMP,
    primary key (id),
    foreign key (member_id) references member(id) on delete cascade
);

create table liked_posts
(
    member_id bigint not null,
    posts_id bigint not null,
    foreign key (member_id) references member(id) on delete cascade,
    foreign key (posts_id) references posts(id) on delete cascade,
    primary key (member_id, posts_id)
);

create table tag
(
    tag_name varchar(255) not null,
    posts_id bigint not null,
    foreign key (posts_id) references posts(id) on delete cascade,
    primary key (tag_name, posts_id)
);

create trigger liked_plus
after insert on liked_posts for each row
call "com.stoph.boolog.trigger.LikedPlus";

create trigger liked_minus
after delete on liked_posts for each row
call "com.stoph.boolog.trigger.LikedMinus";